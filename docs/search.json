[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/Yards-Per-Game-Post/index.html",
    "href": "posts/Yards-Per-Game-Post/index.html",
    "title": "Does Tempo Matter in The Big Ten?",
    "section": "",
    "text": "To start I loaded the required libraries for this project.\n\n\nCode\nsuppressMessages(library(tidyverse))\nsuppressMessages(library(scales))\n\n\nThen, I’ll load in both libraries.\n\n\nCode\nsuppressMessages(twentyfour_plays &lt;- read_csv(\"https://dwillis.github.io/sports-data-files/footballlogs24.csv\"))\nsuppressMessages(twentyfive_plays &lt;- read_csv(\"https://thescoop.org/sports-data-files/footballlogs25.csv\"))\n\n\nThen I had to isolate our Big Ten teams, and add a column that has the total plays for each team in the conference.\n\n\nCode\ntwentyfour_btn &lt;- twentyfour_plays |&gt; filter(Conference == \"Big Ten Conference\") |&gt;  group_by(TeamFull) |&gt; summarise(total_plays = sum(TotalPlays), avg_plays = mean(TotalPlays))\n  \ntwentyfive_btn &lt;- twentyfive_plays |&gt; filter(Conference == \"Big Ten Conference\") |&gt;  group_by(TeamFull) |&gt; summarise(total_plays = sum(TotalPlays), avg_plays = mean(TotalPlays))\n\n\n\n\nCode\nggplot() + \n  geom_bar(\n    data=twentyfour_btn, \n    aes( \n      x=reorder (TeamFull, avg_plays), \n        weight=avg_plays\n  )\n  ) +\nscale_y_continuous(labels=comma) + \n  labs(\n    title=\"2024 Big Ten Avg Plays by Team\", \n    x=\"School\", \n    y=\"Plays Per Game Ran\"\n) +\n    theme_minimal() + \n  coord_flip()\n\n\n\n\n\n\n\n\n\nI copy and pasted that code, but plugged in the 2025 data.\n\n\nCode\nggplot() + \n  geom_bar(\n    data=twentyfive_btn, \n    aes( \n      x=reorder (TeamFull, avg_plays), \n        weight=avg_plays\n  )\n  ) +\nscale_y_continuous(labels=comma) + \n  labs(\n    title=\"2025 Big Ten Avg Plays by Team\", \n    x=\"School\", \n    y=\"Plays Per Game Ran\"\n) +\n    theme_minimal() + \n  coord_flip()\n\n\n\n\n\n\n\n\n\nThere are many reasons why a Big Ten offense would have a high tempo. In the case of the 2025 Indiana Hoosiers or 2024 Oregon Ducks, maybe your an effective uptempo offense who is using no-huddle to get up and down the field on opponents. Or in the case of the 2024 and 2025 leaders in plays per game, maybe your a poor football team who’s offense is constantly stuck on the field. These charts dmeonstrate that total plays are not an effective predictor of team success, although they can be an interesting indicator of your team’s style and system."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "sportsblog",
    "section": "",
    "text": "The 2021 season: the nadir of rushing relevance in college football\n\n\n\n\n\n\n\n\nMax Schaeffer\n\n\n\n\n\n\n\n\n\n\n\n\nHow does Maryland volleyball stack up to the conference’s best?\n\n\n\n\n\n\n\n\nMax Schaeffer\n\n\n\n\n\n\n\n\n\n\n\n\nHow bad was Mike Locksley’s Third Down decision against Illinois\n\n\n\n\n\n\n\n\nMax Schaeffer\n\n\n\n\n\n\n\n\n\n\n\n\nDoes Tempo Matter in The Big Ten?\n\n\n\n\n\n\n\n\nMax Schaeffer\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/volleyball-waffle/index.html",
    "href": "posts/volleyball-waffle/index.html",
    "title": "How does Maryland volleyball stack up to the conference’s best?",
    "section": "",
    "text": "First we need to load the tidyverse and our special library for waffle charts\n\n\nCode\nsuppressMessages(library(tidyverse))\nsuppressMessages(library(waffle))\n\n\nThen we need to load in our 2025 match data.\n\n\nCode\ntwofive_matches &lt;- read_csv(\"https://raw.githubusercontent.com/dwillis/NCAAWomensVolleyballData/main/data/ncaa_womens_volleyball_matchstats_2025.csv\")\n\n\nRows: 4878 Columns: 38\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (4): team, opponent, home_away, result\ndbl  (33): ncaa_id, team_score, opponent_score, s, kills, errors, total_atta...\ndate  (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nNow we will isolate the data to find the statistics we’re looking for for the Terps.\n\n\nCode\nmd &lt;- twofive_matches |&gt; filter(team == \"Maryland\") |&gt; group_by(team) |&gt; summarise(totalkills = sum(kills), totalblocks = sum(block_solos + (block_assists/2)), totalaces = sum(aces), totalopperrors = sum(defensive_errors))\n\n\nNow we’re going to use the waffle function to create our code to visualize the distribution of Maryland’s points.\n\n\nCode\nmd &lt;- c(\"Blocks\"=115, \"Kills\"=525, \"Aces\"=72, \"Opponent Errors\" = 257)\n  waffle(\n        md/3, \n        rows = 10, \n        title=\"Maryland Points Breakdown\", \n        xlab=\"1 square = 1 point\", \n        colors = c(\"black\", \"red\", \"gold\",\"grey\")\n)\n\n\n\n\n\n\n\n\n\nNow I’m going to compare the Terps to one of the conference’s best teams in Nebraska.\n\n\nCode\nneb &lt;- twofive_matches |&gt; filter(team == \"Nebraska\") |&gt; group_by(team) |&gt; summarise(totalkills = sum(kills), totalblocks = sum(block_solos + (block_assists/2)), totalaces = sum(aces), totalopperrors = sum(defensive_errors))\n\n\n\n\nCode\nneb &lt;- c(\"Kills\" = 777, \"Blocks\" = 141, \"Aces\" = 60, \"Opponent Errors\" = 325)\n  waffle(\n        neb/3, \n        rows = 10, \n        title=\"Nebraska Points Breakdown\", \n        xlab=\"1 square = 1 point\", \n        colors = c(\"Blue\", \"Green\", \"Pink\",\"Orange\")\n)\n\n\n\n\n\n\n\n\n\n\n\nCode\nmd &lt;- c(\"Kills\"=525, \"Blocks\"=115, \"Aces\"=72, \"Opponent Errors\" = 257, 334)\niron(\n  waffle(\n    md/3, \n    rows = 10, \n    title = \"Maryland Points Breakdown\", \n    xlab = \"1 square = 1 point\", \n    colors = c(\"black\", \"red\", \"gold\", \"grey\", \"white\")\n  ),\n  waffle(\n    neb/3, \n    rows = 10, \n    title = \"Nebraska Points Breakdown\", \n    xlab = \"1 square = 1 point\", \n    colors = c(\"blue\", \"green\", \"pink\", \"orange\" )\n  )\n)\n\n\n\n\n\n\n\n\n\nNebraska generally has over 300 more points than the Terps which tracks given that they win a lot more than them. The most stark difference in their distribution is that almost 5% more of Nebraska’s points come from kills than the Terps. Maryland seems to be lagging behind the conference’s elite in it’s ability to finish points the simnple way. Interestingly, Maryland has more total aces than Nebraska on the year, so the Terps have been relying on the strong serves of players like Lily Wagner to create advantages. The teams have a similar proportion of blocks, while Nebraska generates more opponent errors proportionally suggesting Maryland needs to do a better job of extending rallies to and making their opponent hit returns."
  },
  {
    "objectID": "posts/third-and-six/index.html",
    "href": "posts/third-and-six/index.html",
    "title": "How bad was Mike Locksley’s Third Down decision against Illinois",
    "section": "",
    "text": "Many Maryland fans were outraged at Mike Locksley’s passive decision to run the ball late in Maryland football’s game against Illinois eventually leading to them tying the game with a field goal and then losing. How common is a run play in those situations though? Lets find out. To start I’m going to load my required library and college football pxp data for the last five years.\n\n\nCode\nsuppressMessages(library(tidyverse))\nsuppressMessages(library(cfbfastR))\n\n\n\n\nCode\nlogs &lt;- load_cfb_pbp(season = 2021:2025)\n\n\nNow we’ll isolate the third and six plays.\n\n\nCode\nthird_and_six &lt;- logs |&gt; filter(down == 3, distance == 6) \n\nthird_and_six_summary &lt;- third_and_six |&gt; group_by(play_type) |&gt; summarise(total_plays=n()) \n\n\nAccording to the data Locksley’s decision was passive, but not entirely uncommon, over the last five seasons team have ran the ball 3,362 times on third and six, good for just over 20% of the third and six plays.\n\n\nCode\nthird_and_six_summary |&gt;  summarise(overall_sum = sum(total_plays), rush_pct = 3362/overall_sum)\n\n\n# A tibble: 1 × 2\n  overall_sum rush_pct\n        &lt;int&gt;    &lt;dbl&gt;\n1       16447    0.204\n\n\nTeams have actually found decent success doing this gaining an average of just under 5.7 yards, although this does include quarter back runs and improvised scrambles.\n\n\nCode\nthird_and_six |&gt; filter(play_type == \"Rush\") |&gt; summarise(avg_yds_gained = mean(yards_gained))\n\n\n# A tibble: 1 × 1\n  avg_yds_gained\n           &lt;dbl&gt;\n1           5.69\n\n\nWhich teams have ran the most in this situation in a single season? To the suprise of no CFB fans the top spot belongs to Navy who ran it 16 times in third and six situations in 2022. No Maryland teams are in the upper echelon of third and six runs in a single season.\n\n\nCode\nthird_and_six_runs &lt;- third_and_six |&gt; filter(play_type == \"Rush\")\n\nthird_and_six_runs &lt;- third_and_six_runs |&gt;\n  group_by(season, team) |&gt;\n  summarise(total_runs = n()) |&gt;\n  arrange(desc(total_runs))\n\n\n`summarise()` has grouped output by 'season'. You can override using the\n`.groups` argument.\n\n\nNow lets compare Locksley’s Terps teams to the rest of the nation.\n\n\nCode\nmdthird_and_six &lt;- logs |&gt; filter(team == \"Maryland\", down == 3, distance == 6) \n\nmdthird_and_six_summary &lt;- mdthird_and_six |&gt; group_by(play_type) |&gt; summarise(total_plays=n()) \n\n\nOut of 71 third and six situations Maryland has been in, they have ran the ball 15 times, good for 21.1% of the time and just a tick above the national average.\n\n\nCode\nmdthird_and_six_summary |&gt;  summarise(overall_sum = sum(total_plays), rush_pct = 15/overall_sum)\n\n\n# A tibble: 1 × 2\n  overall_sum rush_pct\n        &lt;int&gt;    &lt;dbl&gt;\n1          71    0.211\n\n\nNow a fact that might suprise many Terps fans, they’ve achieved some decent success on these run plays, gaining an average of six yards per play getting them exactly to the line to the gain.\n\n\nCode\nmdthird_and_six |&gt; filter(play_type == \"Rush\") |&gt; summarise(avg_yds_gained = mean(yards_gained))\n\n\n# A tibble: 1 × 1\n  avg_yds_gained\n           &lt;dbl&gt;\n1              6\n\n\nLastly, I wanted to take a look at if Locksley and the Terps tendencies have changed in these situations over the years. The answer is slightly. 2022 was an all-time high with five run plays on third and six, since then it’s been on the way down with just 2 in 2024 and one so far in 2025.\n\n\nCode\nmdthird_and_six_runs &lt;- mdthird_and_six |&gt; filter(play_type == \"Rush\")\n\nmd_third_and_six_runs &lt;- mdthird_and_six_runs |&gt;\n  group_by(season, team) |&gt;\n  summarise(total_runs = n()) |&gt;\n  arrange(desc(total_runs))\n\n\n`summarise()` has grouped output by 'season'. You can override using the\n`.groups` argument.\n\n\n\n\nCode\nthird_and_six_runs &lt;- third_and_six_runs |&gt; group_by(season) |&gt; summarise(mean_rushes = mean(total_runs))\n\n\n\n\nCode\ncomparison &lt;- left_join(md_third_and_six_runs, third_and_six_runs, by = \"season\")\n\n\ncomparison_long &lt;- comparison |&gt;\n  pivot_longer(\n    cols = c(total_runs, mean_rushes),\n    names_to = \"type\",\n    values_to = \"runs\"\n  )\n\n\n\n\nCode\nlibrary(ggplot2)\n\nggplot(comparison_long, aes(x = factor(season), y = runs, fill = type)) +\n  geom_col(position = position_dodge(width = 0.7)) +\n  labs(\n    title = \"How often does Maryland run on third and six vs the field\",\n    x = \"Season\",\n    y = \"Number of Runs\",\n    fill = \"\"\n  ) +\n  scale_fill_manual(\n    values = c(\"total_runs\" = \"#D50032\", \"mean_rushes\" = \"gray70\"),\n    labels = c (\"National Average\", \"Maryland\")\n  ) +\n  theme_minimal(base_size = 14)\n\n\n\n\n\n\n\n\n\nThis visualization shows how the Terps have stacked up to the national average of third and six run plays in any given season. In three out of the five most recent seasons they’ve been below it with 2022 being the biggest outlier.\nWhile the data doesn’t take into account time, score, and game script, from a statistical standpoint Maryland isn’t a particularly passive team compared to the rest of the country. Beyond that Locksley’s best argument for the run call is that on average running the ball in that situation has meant the Terps moved the chains. Still, in recent years Maryland has seemed to favor dropping back to pass and ran it less than everyone else in the country."
  },
  {
    "objectID": "posts/close-rushing-wins/index.html",
    "href": "posts/close-rushing-wins/index.html",
    "title": "The 2021 season: the nadir of rushing relevance in college football",
    "section": "",
    "text": "Code\nsuppressMessages(library(tidyverse))\nsuppressMessages(library(lubridate))\n\n\nBesides being the first year back from Covid the 2021 College Football Season featured another large change.\nIt represented a 10-year high in the amount of games won by teams who didn’t rush for 100 yards, boht nationally and in the Big Ten.\nThe Big Ten number was especially shocking with more than 10% of games featuring Big Ten teams being won by a team with under 100 yards rushing. The conference shifted to more air raid offenses that relied heavily on their quarterbacks to varying degrees of success like CJ Stroud (Ohio State), Taulia Tagovailoa (Maryland) and Aidan O’Connell (Purdue).\nIn the years since 2021, the numbers have normalized returning closer to their 2020 and before levels, but they have remained above 5%.\nSome teams like Penn State can be relied upon to produce at least one win a season in which they rush for under 100 yards. The Nittany Lions played a large factor in the 2021 spike picking up four of their seven wins with under 100 rushing yards.\nThe Nittany Lions are also a primary example that the change can’t only be explained as a shift in offensive philosophy. They were able to win games without having to generate much offense at all, allowing under 12 points per game in wins aided by shutouts of Indiana and Rutgers.\nAlso the increased number still represents a small percent of total wins. The national champions in 2021 were the Georgia Bulldogs who netted over 100 yards rushing in every single one of their games behind an NFL backfield of Zamir White and James Cook.\n\n\nCode\nlogs &lt;- read_csv(\"https://dwillis.github.io/sports-data-files/footballlogs1525.csv\")\n\n\nRows: 17133 Columns: 79\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (11): Location, Opponent, Result, OT, Bowl.x, TeamURL, Outcome, Bowl.y,...\ndbl  (64): Rk, Gtm, Points, PointsOpp, PassCmp, PassAtt, PassPct, PassYds, P...\nlgl   (3): Score, TeamScore, OpponentScore\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\n# the Season is the year, of the game except when the game's in January. In those cases its the year -1\n\nlogs &lt;- logs |&gt; mutate(Season = case_when(\n  month(Date) == 1 ~ year(Date) -1,\n  .default = year(Date)\n))  \n\nseason_games &lt;- logs |&gt; \n  group_by(Season) |&gt;  \n  summarise(all_games =n())\n\nseason_games_under_100 &lt;- logs |&gt; \n  filter(Result == \"W\", RushYds &lt; 100) |&gt; \n  group_by(Season) |&gt;  \n  summarise(low_rush_wins =n()) \n\nseason_games &lt;- season_games |&gt;  \n  inner_join(season_games_under_100, join_by(Season)) |&gt; \n  mutate(pct_low_rush_wins = low_rush_wins/all_games* 100)\n\n\n\n\nCode\nbtn_games &lt;- logs |&gt; \n  filter(Conference == \"Big Ten Conference\")\n\nbtnseason_games &lt;- btn_games |&gt; \n  group_by(Season ) |&gt;  \n  summarise(all_games =n())\n\nbtn_games_under_100 &lt;- btn_games|&gt; \n  filter(Result == \"W\", RushYds &lt; 100) |&gt; \n  group_by(Season) |&gt;  \n  summarise(low_rush_wins =n()) \n\nbtnseason_games&lt;- btnseason_games |&gt; \n  inner_join(btn_games_under_100, join_by(Season)) |&gt; \n  mutate(btnpct_low_rush_wins = low_rush_wins/all_games* 100) \n\n\n\n\nCode\nmd_games &lt;- logs |&gt; \n  filter(Team == \"Maryland\")\n\nmdseason_games &lt;- md_games |&gt; \n  group_by(Season) |&gt;  \n  summarise(all_games =n())\n\nmd_games_under_100 &lt;- md_games|&gt; \n  filter(Result == \"W\", RushYds &lt; 100) |&gt; \n  group_by(Season) |&gt;  \n  summarise(low_rush_wins =n()) \n\nmdseason_games |&gt;  \n  inner_join(md_games_under_100, join_by(Season)) |&gt; \n  mutate(pct_low_rush_wins = low_rush_wins/all_games* 100)\n\n\n# A tibble: 4 × 4\n  Season all_games low_rush_wins pct_low_rush_wins\n   &lt;dbl&gt;     &lt;int&gt;         &lt;int&gt;             &lt;dbl&gt;\n1   2021        13             1              7.69\n2   2022        13             1              7.69\n3   2024        12             1              8.33\n4   2025         7             2             28.6 \n\n\n\n\nCode\npsu_games &lt;- logs |&gt; \n  filter(Team == \"Penn State\")\n\npsuseason_games &lt;- psu_games |&gt; \n  group_by(Season) |&gt;  \n  summarise(all_games =n())\n\npsu_games_under_100 &lt;- psu_games|&gt; \n  filter(Result == \"W\", RushYds &lt; 100) |&gt; \n  group_by(Season) |&gt;  \n  summarise(low_rush_wins =n()) \n\npsuseason_games |&gt;  \n  inner_join(psu_games_under_100, join_by(Season)) |&gt; \n  mutate(pct_low_rush_wins = low_rush_wins/all_games* 100)\n\n\n# A tibble: 7 × 4\n  Season all_games low_rush_wins pct_low_rush_wins\n   &lt;dbl&gt;     &lt;int&gt;         &lt;int&gt;             &lt;dbl&gt;\n1   2015        13             2             15.4 \n2   2016        14             3             21.4 \n3   2017        13             3             23.1 \n4   2019        13             1              7.69\n5   2021        13             4             30.8 \n6   2022        13             1              7.69\n7   2024        16             1              6.25\n\n\n\n\nCode\nbtnvsnational &lt;- season_games |&gt; \n  inner_join(btnseason_games, join_by(Season)) \n\nbtnvsnational_long &lt;- btnvsnational |&gt; \n  pivot_longer(\n    cols = c(pct_low_rush_wins, btnpct_low_rush_wins),\n    names_to = \"Category\",\n    values_to = \"Percent\"\n  )\n\n\n\n\nCode\nggplot(btnvsnational_long, aes(x = Season, y = Percent, color = Category)) +\n  geom_line(linewidth = 1.2) +\n  geom_point(size = 2) +\n   scale_color_manual(   values = c(\n      \"pct_low_rush_wins\" = \"black\", \n      \"btnpct_low_rush_wins\" = \"blue\"\n    ), labels=c(\n      \"pct_low_rush_wins\" = \"National Percentage\",\n      \"btnpct_low_rush_wins\" = \"Big Ten Percentage\"\n    )\n    )+\n  labs(\n    title = \"CFB Games where the winning team rushed for under 100 yards\",\n    subtitle = \"2021 saw all time highs in the conference and nationally\",\n    x = \"Year\",\n    y = \"Low Rush Win Percentage\",\n    color = \"Legend\" \n  ) + \n  scale_x_continuous(breaks = unique(btnvsnational_long$Season)) +\n  scale_y_continuous(\n    limits = c(0, NA) )"
  }
]